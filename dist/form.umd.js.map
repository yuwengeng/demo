{"version":3,"file":"form.umd.js","sources":["../lib/Dialog.js"],"sourcesContent":["/**\r\n * @Dialog.js\r\n * @author zhangxinxu\r\n * @version\r\n * Created: 15-06-18\r\n */\r\n\r\n (function (global, factory) {\r\n  if (typeof define === 'function' && (define.amd || define.cmd)) {\r\n      define(factory);\r\n  } else {\r\n      global.Dialog = factory();\r\n  }\r\n}(this, function (require) {\r\n  // require\r\n  if (typeof require == 'function') {\r\n      require('common/ui/Loading');\r\n  }\r\n\r\n  /**\r\n   * 弹框组件\r\n   * IE9+基于HTML5 <dialog>元素创建\r\n   * 本透明遮罩层和弹框在一个元素内\r\n   * @example\r\n   * var myDialog = new Dialog(options);\r\n   * $(button).click(function() {\r\n         myDialog.remove();\r\n     });\r\n   */\r\n\r\n  // 类名前缀\r\n  var prefixGlobal = 'ui-';\r\n  var prefixDialog = 'ui-dialog-';\r\n  var joiner = '-';\r\n\r\n  // 关闭SVG\r\n  var svg = window.addEventListener ? '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"200\" height=\"200\" viewBox=\"0 0 200 200\"><path d=\"M116.152,99.999l36.482-36.486c2.881-2.881,2.881-7.54,0-10.42 l-5.215-5.215c-2.871-2.881-7.539-2.881-10.42,0l-36.484,36.484L64.031,47.877c-2.881-2.881-7.549-2.881-10.43,0l-5.205,5.215 c-2.881,2.881-2.881,7.54,0,10.42l36.482,36.486l-36.482,36.482c-2.881,2.881-2.881,7.549,0,10.43l5.205,5.215 c2.881,2.871,7.549,2.871,10.43,0l36.484-36.488L137,152.126c2.881,2.871,7.549,2.871,10.42,0l5.215-5.215 c2.881-2.881,2.881-7.549,0-10.43L116.152,99.999z\"/></svg>' : '';\r\n\r\n  // Is it webkit\r\n  var isWebkit = 'WebkitAppearance' in document.documentElement.style || typeof document.webkitHidden != 'undefined';\r\n\r\n  // jquery语法\r\n  $.dialog = function (options) {\r\n      return new Dialog(options);\r\n  };\r\n\r\n  /**\r\n   * 弹框实例方法\r\n   * @param {Object} options 纯对象，可选参数\r\n   */\r\n  var Dialog = function (options) {\r\n      var defaults = {\r\n          title: '',\r\n          // 不同类别的内容类型\r\n          content: '',\r\n          // 弹框的宽度\r\n          width: 'auto',\r\n          // 不同类别的默认按钮\r\n          buttons: [],\r\n          // 弹框显示、隐藏、移除的回调\r\n          onShow: $.noop,\r\n          onHide: $.noop,\r\n          onRemove: $.noop\r\n      };\r\n      // 最终参数\r\n      var params = $.extend({}, defaults, options || {});\r\n\r\n      var el = {};\r\n      this.el = el;\r\n      // 存储一些参数\r\n      this.width = params.width;\r\n      this.callback = {\r\n          show: params.onShow,\r\n          hide: params.onHide,\r\n          remove: params.onRemove\r\n      };\r\n      // 各个元素创建\r\n      // 容器-含半透明遮罩背景\r\n      el.container = window.addEventListener ? $('<dialog class=\"' + prefixDialog + 'container\"></dialog>') : $('<div class=\"' + prefixDialog + 'container\"></div>');\r\n\r\n      // IE10+增加CSS3动画支持\r\n      if (history.pushState) {\r\n          el.container.get(0).addEventListener(isWebkit ? 'webkitAnimationEnd' : 'animationend', function(event) {\r\n              if (event.target.tagName.toLowerCase() == 'dialog') {\r\n                  this.classList.remove(prefixDialog + 'animation');\r\n              }\r\n          });\r\n      }\r\n\r\n      // 弹框主体\r\n      el.dialog = $('<div class=\"' + prefixGlobal + 'dialog\"></div>').css('width', params.width).attr({\r\n          tabindex: '-1',\r\n          role: 'dialog'\r\n      });\r\n      // 标题\r\n      el.title = $('<div class=\"' + prefixDialog + 'title\" role=\"heading\"></div>').html(params.title);\r\n      // 关闭按钮\r\n      var idClose = ('id_' + Math.random()).replace('0.', '');\r\n      el.close = $('<a href=\"javascript:\" class=\"' + prefixDialog + 'close ESC\"></a>').attr({\r\n          role: 'button',\r\n          'aria-label': '关闭',\r\n          id: idClose,\r\n          'data-target': idClose\r\n      }).html(svg).click($.proxy(function(event) {\r\n          event.preventDefault();\r\n          // 有其他可ESC元素存在时候，弹框不关闭\r\n          var activeElement = document.activeElement;\r\n          var attrActiveElement = activeElement.getAttribute('data-target');\r\n          var targetElement = attrActiveElement && document.getElementById(attrActiveElement);\r\n\r\n          if (window.isKeyEvent && targetElement && activeElement != el.close[0] && document.querySelector('a[data-target=\"' + attrActiveElement + '\"],input[data-target=\"' + attrActiveElement + '\"]') && targetElement.clientWidth > 0) {\r\n              return;\r\n          }\r\n          // 关闭弹框\r\n          this[this.closeMode]();\r\n      }, this));\r\n      // 主体\r\n      var content = params.content;\r\n      // content可以是函数\r\n      if ($.isFunction(content)) {\r\n          content = content();\r\n      }\r\n\r\n      if (!content.size) {\r\n          this.closeMode = 'remove';\r\n      } else {\r\n          this.closeMode = 'hide';\r\n      }\r\n\r\n      el.body = $('<div class=\"' + prefixDialog + 'body\"></div>')[content.size ? 'append' : 'html'](content);\r\n      // 底部\r\n      el.footer = $('<div class=\"' + prefixDialog + 'footer\"></div>');\r\n      // 按钮\r\n      this.button(params.buttons);\r\n\r\n      // 组装\r\n      el.container.append(el.dialog.append(el.close).append(el.title).append(el.body).append(el.footer));\r\n\r\n      // IE7 额外辅助元素\r\n      if (!document.querySelector) {\r\n          el.container.append('<i class=\"' + prefixDialog + 'after\"></i>');\r\n      }\r\n\r\n      // zIndex动态计算\r\n      // 所有dialog的前面\r\n      var dialog = $('.' + prefixDialog + 'container');\r\n      if (dialog.length) {\r\n          // 页面前置\r\n          dialog.eq(0).before(el.container.css({\r\n              // 动态计算zIndex值\r\n              zIndex: dialog.eq(0).css('z-index') * 1 + 1\r\n          }));\r\n      } else {\r\n          // 页面后入\r\n          (params.container || $(document.body)).append(el.container);\r\n      }\r\n\r\n      this.display = false;\r\n\r\n      if (params.content) {\r\n          this.show();\r\n      }\r\n\r\n      return this;\r\n  };\r\n\r\n  /**\r\n   * 弹框按钮元素\r\n   * @param  {Array} data 数组，数组项为弹框按钮相关的数据对象\r\n   * @return {Object}     返回当前实例对象\r\n   */\r\n  Dialog.prototype.button = function(data) {\r\n      var el = this.el;\r\n      var dialog = this;\r\n      // 先清空弹框的footer\r\n      el.footer.empty();\r\n      // 遍历按钮数据生成按钮\r\n      $.each(data, function(i, btn) {\r\n          // 避免btn为null等值报错\r\n          btn = btn || {};\r\n\r\n          // 按钮的默认参数\r\n          var type = i ? (btn.type || '') : (btn.type || 'primary');\r\n          var value = i ? (btn.value || '取消') : (btn.value || '确定');\r\n\r\n          // 事件处理，如果直接function类型，则认为是点击方法\r\n          var events = btn.events || {\r\n              click: function() {\r\n                  dialog[dialog.closeMode]();\r\n              }\r\n          };\r\n\r\n          if ($.isFunction(events)) {\r\n              events = {\r\n                  click: events\r\n              };\r\n          }\r\n\r\n          // 按钮的类名值\r\n          var cl = prefixGlobal + 'button';\r\n          if (type) cl = cl + ' ' + cl + joiner + type;\r\n\r\n          if (!btn['for']) {\r\n              el['button' + i] = $('<a href=\"javascript:\" class=\"' + cl + '\" role=\"button\">' + value + '</a>');\r\n          } else {\r\n              el['button' + i] = $('<label for=\"' + btn['for'] + '\" class=\"' + cl + '\" role=\"button\">' + value + '</label>');\r\n          }\r\n\r\n          $.each(events, function (eventType, fn) {\r\n              el['button' + i].bind(eventType, {\r\n                  dialog: dialog\r\n              }, fn);\r\n\r\n              el['button' + i].on('focus', function () {\r\n                  $(this).css('outline', window.isKeyEvent ? '' : 'none');\r\n              });\r\n          });\r\n\r\n          el.footer.append(el['button' + i]);\r\n      });\r\n\r\n      return dialog;\r\n  },\r\n\r\n  /**\r\n   * loading弹框，通常用在ajax请求弹框数据之前使用\r\n   * loading结束后可以直接调用弹框实例的open()方法显示\r\n   * @return {Object} 返回当前实例对象\r\n   */\r\n  Dialog.prototype.loading = function () {\r\n      if (!$().loading) {\r\n          window.console && window.console.error('need Loading.js');\r\n          return dialog;\r\n      }\r\n\r\n      var el = this.el;\r\n      var dialog = this;\r\n\r\n      if (el) {\r\n          el.container.attr('class', [prefixDialog + 'container', prefixDialog + 'loading'].join(' '));\r\n          el.body.loading();\r\n          dialog.show();\r\n      }\r\n\r\n      return dialog;\r\n  };\r\n\r\n  /**\r\n   * loading结束调用，主要包含内容展开的动画交互效果\r\n   * @param  {number|0|false} time 参见Loading.js中的time参数\r\n   * @return {Object} 返回当前实例对象\r\n   */\r\n  Dialog.prototype.unloading = function (time) {\r\n      if (!$().unloading) {\r\n          window.console && window.console.error('need Loading.js');\r\n          return dialog;\r\n      }\r\n\r\n      var el = this.el;\r\n      var dialog = this;\r\n      if (el) {\r\n          el.container.removeClass(prefixDialog + 'loading');\r\n          el.body.unloading(time);\r\n      }\r\n\r\n      return dialog;\r\n  };\r\n\r\n  /**\r\n   * 打开类型弹框的底层方法\r\n   * @param  {String} html    弹框字符内容\r\n   * @param  {Object} options 可选参数，这里只支持标题和按钮的自定义\r\n   * @return {Object} 返回当前实例对象\r\n   */\r\n  Dialog.prototype.open = function (html, options) {\r\n      var el = this.el;\r\n      var dialog = this;\r\n      // 默认参数\r\n      var defaults = {\r\n          title: '',\r\n          buttons: []\r\n      };\r\n      // 最终参数\r\n      var params = $.extend({}, defaults, options || {});\r\n      // 替换当前弹框的内容，包括按钮等\r\n      if (el && html) {\r\n          el.container.attr('class', [prefixDialog + 'container'].join(' '));\r\n          el.title.html(params.title);\r\n          el.body.html(html);\r\n          dialog.button(params.buttons).show();\r\n      }\r\n\r\n      return dialog;\r\n  };\r\n\r\n  /**\r\n   * alert类型的弹框，默认仅一个“确定”按钮\r\n   * @param  {String} html    提示文字或者提示HTML片段\r\n   * @param  {Object} options 提示可选参数\r\n   * @return {Object}         返回当前实例对象\r\n   */\r\n  Dialog.prototype.alert = function (html, options) {\r\n      var el = this.el;\r\n      var dialog = this;\r\n      // alert框的默认参数\r\n      var defaults = {\r\n          title: '',\r\n          // 类型, 'remind', 'success', 'warning', 或者任意 'custom'\r\n          type: 'remind',\r\n          buttons: [{}]\r\n      };\r\n      // 最终参数\r\n      var params = $.extend({}, defaults, options || {});\r\n\r\n      if (!params.buttons[0].type && params.type != 'remind') {\r\n          params.buttons[0].type = params.type;\r\n      }\r\n\r\n      // 替换当前弹框的内容，包括按钮等\r\n      if (el && html) {\r\n          el.container.attr('class', [prefixDialog + 'container', prefixDialog + 'alert'].join(' '));\r\n          el.dialog.width('auto').attr({\r\n              role: 'alertdialog'\r\n          });\r\n          el.title.html(params.title);\r\n          // 如果是纯文本\r\n          if (/<[\\w\\W]+>/.test(html) == false) {\r\n              html = '<p>' + html + '</p>';\r\n          }\r\n\r\n          el.body.html('<div class=\"' + prefixDialog + params.type + ' ' + prefixDialog + 'alert\">' + html + '</div>');\r\n          this.button(params.buttons).show();\r\n\r\n          if (el.button0) {\r\n              el.button0.focus();\r\n          }\r\n      }\r\n\r\n      return dialog;\r\n  };\r\n\r\n  /**\r\n   * confirm类型的弹框，默认有一个“确定”和一个“取消”按钮\r\n   * @param  {String} html    提示文字或者提示HTML片段\r\n   * @param  {Object} options 提示可选参数\r\n   * @return {Object}         返回当前实例对象\r\n   */\r\n  Dialog.prototype.confirm = function (html, options) {\r\n      var el = this.el;\r\n      var dialog = this;\r\n      // confirm框的默认参数\r\n      var defaults = {\r\n          title: '',\r\n          type: 'warning',\r\n          buttons: [{\r\n              type: 'warning'\r\n          }, {\r\n              // 取消按钮使用默认配置\r\n          }]\r\n      };\r\n      // 最终参数\r\n      var params = $.extend({}, defaults, options || {});\r\n\r\n      // warning类型的按钮可缺省\r\n      if (params.buttons.length && !params.buttons[0].type) {\r\n          params.buttons[0].type = 'warning';\r\n      }\r\n\r\n      // 替换当前弹框的内容，包括按钮等\r\n      if (el && html) {\r\n          el.container.attr('class', [prefixDialog + 'container', prefixDialog + 'confirm'].join(' '));\r\n          el.dialog.width('auto');\r\n          el.title.html(params.title);\r\n          // 如果是纯文本\r\n          if (/<[\\w\\W]+>/.test(html) == false) {\r\n              html = '<p>' + html + '</p>';\r\n          }\r\n\r\n          el.body.html('<div class=\"' + prefixDialog + params.type + ' ' + prefixDialog + 'confirm\">' + html + '</div>');\r\n          this.button(params.buttons).show();\r\n\r\n          if (el.button0) {\r\n              el.button0.focus();\r\n          }\r\n      }\r\n\r\n      return dialog;\r\n  };\r\n\r\n  /**\r\n   * 直接ajax请求数据并弹框显示处理\r\n   * @param  {Object} ajaxOptions ajax请求参数，同$.ajax()参数\r\n   * @param  {Object} options     弹框相关的可选参数\r\n   * @return {Object}             返回当前实例对象\r\n   */\r\n  Dialog.prototype.ajax = function (ajaxOptions, options) {\r\n      var dialog = this;\r\n      // ajax请求的一些默认参数\r\n      // 类似timeout等参数这里缺省了\r\n      // url直接注释了，就是jQuery的Ajax参数\r\n      var ajaxDefaults = {\r\n          // 必须参数，请求地址\r\n          // url: '',\r\n          dataType: 'JSON',\r\n          timeout: 30000,\r\n          error: function(xhr, status) {\r\n              var msgSorry = '<h6>尊敬的用户，很抱歉您刚才的操作没有成功！</h6>';\r\n              var msgReason = '';\r\n\r\n              if (status == 'timeout') {\r\n                  msgReason = '<p>主要是由于请求时间过长，数据没能成功加载，这一般是由于网速过慢导致，您可以稍后重试！</p>';\r\n              } else if (status == 'parsererror') {\r\n                  msgReason = '<p>原因是请求的数据含有不规范的内容。一般出现这样的问题是开发人员没有考虑周全，欢迎向我们反馈此问题！</p>';\r\n              } else {\r\n                  msgReason = '<p>一般是网络出现了异常，如断网；或是网络临时阻塞，您可以稍后重试！如依然反复出现此问题，欢迎向我们反馈！</p>';\r\n              }\r\n              dialog.alert(msgSorry + msgReason, {\r\n                  type: 'warning'\r\n              }).unloading();\r\n          }\r\n      };\r\n      var ajaxParams = $.extend({}, ajaxDefaults, ajaxOptions || {});\r\n\r\n      // ajax的url地址是必须参数\r\n      if (!ajaxParams.url) {\r\n          return this;\r\n      }\r\n\r\n      // 下面是弹框的一些默认参数\r\n      var defaults = {\r\n          title: '',\r\n          content: function(data) {\r\n              // 如果ajax的类型是'JSON', 此方法用来返回格式化的HTML数据\r\n              // 如果是HTML, 默认返回HTML\r\n              if (typeof data == 'string') {\r\n                  return data;\r\n              }\r\n\r\n              return '看见我说明没使用\\'options.content\\'做JSON解析';\r\n          },\r\n          buttons: []\r\n      };\r\n      var params = $.extend({}, defaults, options || {});\r\n\r\n      // 存储ajax时候的activeElement\r\n      // var lastActiveElement = this.lastActiveElement;\r\n      // ajax走起，记录当前时间戳\r\n      var timer = new Date().getTime();\r\n      // ajax success回调走合并\r\n      var success = ajaxParams.success;\r\n      ajaxParams.success = function (data) {\r\n          dialog.open(params.content(data), params);\r\n          // 移除菊花态\r\n          // 如果时间戳小于100毫秒\r\n          // 弹框直接打开，无动画\r\n          if (new Date().getTime() - timer < 100) {\r\n              dialog.unloading(0);\r\n          } else {\r\n              dialog.unloading();\r\n          }\r\n\r\n          // 这是用户设置的成功回调\r\n          if ($.isFunction(success)) {\r\n              success.apply(this, arguments);\r\n          }\r\n      };\r\n\r\n      // 开始执行Ajax请求\r\n      // 稍等……\r\n      // 请求之前，我们还需要做一件事件\r\n      // 开菊花\r\n      dialog.loading();\r\n      // ajax走起\r\n      // 下面的定时器测试用\r\n      // setTimeout(function() {\r\n      $.ajax(ajaxParams);\r\n      // }, 150);\r\n\r\n      return dialog;\r\n  };\r\n\r\n  /**\r\n   * 弹框出现与不出现，背景锁定同时页面不晃动的处理\r\n   * @return {Object} 返回当前实例对象\r\n   */\r\n  Dialog.prototype.scroll = function () {\r\n      var containers = $('.' + prefixDialog + 'container');\r\n\r\n      // 是否有显示的弹框\r\n      var isDisplayed = false;\r\n      containers.each(function() {\r\n          if ($(this).css('display') == 'block') {\r\n              isDisplayed = true;\r\n          }\r\n      });\r\n\r\n      // 因为去掉了滚动条，所以宽度需要偏移，保证页面内容没有晃动\r\n      if (isDisplayed) {\r\n          var widthScrollbar = 17;\r\n          if (this.display != true && typeof window.innerWidth == 'number') {\r\n              widthScrollbar = window.innerWidth - document.documentElement.clientWidth;\r\n          }\r\n          document.documentElement.style.overflow = 'hidden';\r\n\r\n          if (this.display != true) {\r\n              $(document.body).css('border-right', widthScrollbar + 'px solid transparent');\r\n          }\r\n      } else {\r\n          document.documentElement.style.overflow = '';\r\n          $(document.body).css('border-right', '');\r\n      }\r\n\r\n      return this;\r\n  };\r\n\r\n  /**\r\n   * 键盘可访问的细节处理\r\n   * @return {Object} 返回当前实例对象\r\n   */\r\n  Dialog.prototype.tabindex = function () {\r\n      var dialog = this.el.dialog;\r\n      var lastActiveElement = this.lastActiveElement;\r\n\r\n      if (this.display == true) {\r\n          var activeElement = document.activeElement;\r\n          if (dialog[0] !== activeElement) {\r\n              this.lastActiveElement = activeElement;\r\n          }\r\n\r\n          // 键盘索引起始位置变为在弹框元素上\r\n          if (dialog) {\r\n              dialog.focus();\r\n          }\r\n      } else if (lastActiveElement && lastActiveElement.tagName.toLowerCase() != 'body') {\r\n          // 键盘焦点元素还原\r\n          lastActiveElement.focus();\r\n          lastActiveElement.blur();\r\n          this.lastActiveElement = null;\r\n      }\r\n\r\n      return dialog;\r\n  };\r\n\r\n  /**\r\n   * 弹框显示方法\r\n   * @return {Object} 返回当前实例对象\r\n   */\r\n  Dialog.prototype.show = function () {\r\n      var container = this.el && this.el.container;\r\n      if (container) {\r\n          // 面板显示\r\n          container.css('display', 'block');\r\n          if (this.display != true) {\r\n              container.addClass(prefixDialog + 'animation');\r\n          }\r\n          this.scroll();\r\n          this.display = true;\r\n\r\n          this.tabindex();\r\n\r\n          if ($.isFunction(this.callback.show)) {\r\n              this.callback.show.call(this, container);\r\n          }\r\n      }\r\n\r\n      return this;\r\n  };\r\n\r\n  /**\r\n   * 弹框隐藏方法\r\n   * @return {Object} 返回当前实例对象\r\n   */\r\n  Dialog.prototype.hide = function () {\r\n      var container = this.el.container;\r\n\r\n      if (container) {\r\n          container.hide();\r\n          this.scroll();\r\n          this.display = false;\r\n          // 键盘焦点元素还原\r\n          this.tabindex();\r\n          if ($.isFunction(this.callback.hide)) {\r\n              this.callback.hide.call(this, container);\r\n          }\r\n      }\r\n\r\n      return this;\r\n  };\r\n\r\n  /**\r\n   * 弹框移除方法\r\n   * @return {Object} 返回当前实例对象\r\n   */\r\n  Dialog.prototype.remove = function () {\r\n      var container = this.el && this.el.container;\r\n      // var lastActiveElement = this.lastActiveElement;\r\n      if (container) {\r\n          container.remove();\r\n          this.scroll();\r\n          this.display = false;\r\n          // 键盘焦点元素还原\r\n          this.tabindex();\r\n          if ($.isFunction(this.callback.remove)) {\r\n              this.callback.remove.call(this, container);\r\n          }\r\n      }\r\n\r\n      return this;\r\n  };\r\n\r\n  return Dialog;\r\n}));\r\n"],"names":["factory","require","svg","window","addEventListener","isWebkit","document","documentElement","style","webkitHidden","$","dialog","options","Dialog","defaults","title","content","width","buttons","onShow","noop","onHide","onRemove","params","extend","el","this","callback","show","hide","remove","container","history","pushState","get","event","target","tagName","toLowerCase","classList","prefixDialog","css","attr","tabindex","role","html","idClose","Math","random","replace","close","id","click","proxy","preventDefault","activeElement","attrActiveElement","getAttribute","targetElement","getElementById","isKeyEvent","querySelector","clientWidth","closeMode","isFunction","size","body","footer","button","append","length","eq","before","zIndex","display","prototype","data","empty","each","i","btn","type","value","events","cl","prefixGlobal","eventType","fn","bind","on","loading","console","error","join","unloading","time","removeClass","open","alert","test","button0","focus","confirm","ajax","ajaxOptions","ajaxParams","dataType","timeout","xhr","status","url","timer","Date","getTime","success","apply","arguments","scroll","containers","isDisplayed","widthScrollbar","innerWidth","overflow","lastActiveElement","blur","addClass","call","define","amd","cmd"],"mappings":"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"}